components:
  schemas:
    CreateRunRequestBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/CreateRunRequestBody.json
          format: uri
          readOnly: true
          type: string
        parameters:
          type: string
        scenario_id:
          type: string
      required:
        - scenario_id
        - parameters
      type: object
    CreateRunResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/CreateRunResponseBody.json
          format: uri
          readOnly: true
          type: string
        created_at:
          type: string
        id:
          type: string
        parameters:
          type: string
        scenario_id:
          type: string
        status:
          type: string
      required:
        - id
        - scenario_id
        - status
        - parameters
        - created_at
      type: object
    CreateScenarioRequestBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/CreateScenarioRequestBody.json
          format: uri
          readOnly: true
          type: string
        description:
          type: string
        icon:
          type: string
        name:
          type: string
        tag:
          type: string
      required:
        - name
      type: object
    CreateScenarioResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/CreateScenarioResponseBody.json
          format: uri
          readOnly: true
          type: string
        created_at:
          type: string
        description:
          type: string
        icon:
          type: string
        id:
          type: string
        name:
          type: string
        tag:
          type: string
        updated_at:
          type: string
      required:
        - id
        - name
        - description
        - tag
        - icon
        - created_at
        - updated_at
      type: object
    DeleteScenarioResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/DeleteScenarioResponseBody.json
          format: uri
          readOnly: true
          type: string
        success:
          type: boolean
      required:
        - success
      type: object
    ErrorDetail:
      additionalProperties: false
      properties:
        location:
          description: Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
          type: string
        message:
          description: Error message text
          type: string
        value:
          description: The value at the given location
      type: object
    ErrorModel:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/ErrorModel.json
          format: uri
          readOnly: true
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          examples:
            - Property foo is required but is missing.
          type: string
        errors:
          description: Optional list of individual error details
          items:
            $ref: "#/components/schemas/ErrorDetail"
          type:
            - array
            - "null"
        instance:
          description: A URI reference that identifies the specific occurrence of the problem.
          examples:
            - https://example.com/error-log/abc123
          format: uri
          type: string
        status:
          description: HTTP status code
          examples:
            - 400
          format: int64
          type: integer
        title:
          description: A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
          examples:
            - Bad Request
          type: string
        type:
          default: about:blank
          description: A URI reference to human-readable documentation for the error.
          examples:
            - https://example.com/errors/example
          format: uri
          type: string
      type: object
    GetRunResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/GetRunResponseBody.json
          format: uri
          readOnly: true
          type: string
        created_at:
          type: string
        finished_at:
          type: string
        id:
          type: string
        parameters:
          type: string
        scenario_id:
          type: string
        started_at:
          type: string
        status:
          type: string
        updated_at:
          type: string
      required:
        - id
        - scenario_id
        - status
        - parameters
        - created_at
        - updated_at
      type: object
    GreetingOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/GreetingOutputBody.json
          format: uri
          readOnly: true
          type: string
        message:
          description: Greeting message
          examples:
            - Hello, world!
          type: string
      required:
        - message
      type: object
    ListRunsResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/ListRunsResponseBody.json
          format: uri
          readOnly: true
          type: string
        data:
          items:
            $ref: "#/components/schemas/RunListItem"
          type:
            - array
            - "null"
        page:
          format: int64
          type: integer
        rpp:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
        - data
        - total
        - page
        - rpp
      type: object
    ListScenariosResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/ListScenariosResponseBody.json
          format: uri
          readOnly: true
          type: string
        data:
          items:
            $ref: "#/components/schemas/ScenarioResponseItem"
          type:
            - array
            - "null"
        page:
          format: int64
          type: integer
        rpp:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
      required:
        - data
        - total
        - page
        - rpp
      type: object
    RunListItem:
      additionalProperties: false
      properties:
        created_at:
          type: string
        finished_at:
          type: string
        id:
          type: string
        parameters:
          type: string
        scenario_id:
          type: string
        started_at:
          type: string
        status:
          type: string
      required:
        - id
        - scenario_id
        - status
        - parameters
        - created_at
      type: object
    ScenarioResponseItem:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/ScenarioResponseItem.json
          format: uri
          readOnly: true
          type: string
        created_at:
          type: string
        description:
          type: string
        icon:
          type: string
        id:
          type: string
        name:
          type: string
        tag:
          type: string
        updated_at:
          type: string
      required:
        - id
        - name
        - description
        - tag
        - icon
        - created_at
        - updated_at
      type: object
    StartRunResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/StartRunResponseBody.json
          format: uri
          readOnly: true
          type: string
        id:
          type: string
        started_at:
          type: string
        status:
          type: string
      required:
        - id
        - status
        - started_at
      type: object
    UpdateScenarioRequestBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/UpdateScenarioRequestBody.json
          format: uri
          readOnly: true
          type: string
        description:
          type: string
        icon:
          type: string
        name:
          type: string
        tag:
          type: string
      type: object
    UpdateScenarioResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          examples:
            - https://example.com/schemas/UpdateScenarioResponseBody.json
          format: uri
          readOnly: true
          type: string
        description:
          type: string
        icon:
          type: string
        id:
          type: string
        name:
          type: string
        tag:
          type: string
        updated_at:
          type: string
      required:
        - id
        - name
        - description
        - tag
        - icon
        - updated_at
      type: object
info:
  title: Parrot Flow API
  version: 1.0.0
openapi: 3.1.0
paths:
  /:
    get:
      description: Root endpoint for the Parrot Flow API
      operationId: root
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GreetingOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Root
      tags:
        - system
  /api/runs:
    get:
      description: Get a list of runs with optional filtering
      operationId: list-runs
      parameters:
        - explode: false
          in: query
          name: scenario_id
          schema:
            type: string
        - explode: false
          in: query
          name: status
          schema:
            type: string
        - explode: false
          in: query
          name: page
          schema:
            format: int64
            type: integer
        - explode: false
          in: query
          name: rpp
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRunsResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: List runs
      tags:
        - ScenarioRun
    post:
      description: Create a new scenario run
      operationId: create-run
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRunRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRunResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Create a new run
      tags:
        - ScenarioRun
  /api/runs/{id}:
    get:
      description: Retrieve a specific run by its ID
      operationId: get-run
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRunResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get a run by ID
      tags:
        - ScenarioRun
  /api/runs/{id}/start:
    post:
      description: Start execution of a run
      operationId: start-run
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartRunResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Start a run
      tags:
        - ScenarioRun
  /api/scenarios/:
    get:
      description: Get a list of scenarios with optional filtering
      operationId: list-scenarios
      parameters:
        - explode: false
          in: query
          name: name
          schema:
            type: string
        - explode: false
          in: query
          name: tag
          schema:
            type: string
        - explode: false
          in: query
          name: page
          schema:
            format: int64
            type: integer
        - explode: false
          in: query
          name: rpp
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListScenariosResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: List scenarios
      tags:
        - scenarios
    post:
      description: Create a new browser automation scenario
      operationId: create-scenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScenarioRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateScenarioResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Create a new scenario
      tags:
        - scenarios
  /api/scenarios/{id}:
    delete:
      description: Delete a scenario by its ID
      operationId: delete-scenario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteScenarioResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Delete a scenario
      tags:
        - scenarios
    get:
      description: Retrieve a specific scenario by its ID
      operationId: get-scenario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScenarioResponseItem"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get a scenario by ID
      tags:
        - scenarios
    patch:
      description: Update an existing scenario
      operationId: update-scenario
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateScenarioRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateScenarioResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Update a scenario
      tags:
        - scenarios
  /health:
    get:
      description: Check the health status of the API
      operationId: health
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GreetingOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Health Check
      tags:
        - system
